# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type DishOption {
  id: Float!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  price: Float!
  dish: Dish
  dishId: Float
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Dish {
  id: Float!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  price: Float!
  imageUrl: String!
  description: String
  restaurant: Restaurant!
  restaurantId: Float!
  dishOptions: [DishOption!]
}

type Category {
  id: Float!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  imageUrl: String!
  restaurants: [Restaurant!]!
  totalRestaurants: Float!
}

type Restaurant {
  id: Float!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  address: String!
  imageUrl: String!
  category: Category
  owner: User!
  ownerId: Float!
  dishes: [Dish!]!
}

type User {
  id: Float!
  createdAt: DateTime!
  updatedAt: DateTime!
  email: String!
  username: String!
  password: String!
  emailVerified: Boolean!
  role: Role!
  restaurants: [Restaurant!]!
}

enum Role {
  Owner
  Customer
  Driver
  Any
}

type CreateAccountOutput {
  ok: Boolean!
  message: String!
}

type EditProfileOutput {
  ok: Boolean!
  message: String!
}

type LoginOutput {
  ok: Boolean!
  message: String!
  token: String
}

type ResetPasswordOutput {
  ok: Boolean!
  message: String!
}

type SeeProfileOutput {
  ok: Boolean!
  message: String!
  user: User
}

type VerifyEmailOutput {
  ok: Boolean!
  message: String!
}

type SendPasswordResetOutput {
  ok: Boolean!
  message: String!
}

type CreateRestaurantOutput {
  ok: Boolean!
  message: String!
}

type EditRestaurantOutput {
  ok: Boolean!
  message: String!
}

type DeleteRestaurantOutput {
  ok: Boolean!
  message: String!
}

type SeeAllRestaurantsOutput {
  ok: Boolean!
  message: String!
  totalPages: Float
  totalRestaurants: Float
  restaurants: [Restaurant!]
}

type SeeRestaurantOutput {
  ok: Boolean!
  message: String!
  restaurant: Restaurant
}

type SearchRestaurantsOutput {
  ok: Boolean!
  message: String!
  totalPages: Float
  totalRestaurants: Float
  restaurants: [Restaurant!]
}

type SeeAllCategoriesOutput {
  ok: Boolean!
  message: String!
  category: [Category!]
}

type SeeCategoryOutput {
  ok: Boolean!
  message: String!
  totalPages: Float
  totalRestaurants: Float
  category: Category
}

type CreateDishOutput {
  ok: Boolean!
  message: String!
}

type DeleteDishOutput {
  ok: Boolean!
  message: String!
}

type EditDishOutput {
  ok: Boolean!
  message: String!
}

type Query {
  seeMe: User!
  seeProfile(input: SeeProfileInput!): SeeProfileOutput!
  seeAllRestaurants(input: SeeAllRestaurantsInput!): SeeAllRestaurantsOutput!
  seeRestaurant(input: SeeRestaurantInput!): SeeRestaurantOutput!
  searchRestaurants(input: SearchRestaurantsInput!): SearchRestaurantsOutput!
  seeAllCategories: SeeAllCategoriesOutput!
  seeCategory(input: SeeCategoryInput!): SeeCategoryOutput!
}

input SeeProfileInput {
  id: Float!
}

input SeeAllRestaurantsInput {
  page: Float = 1
}

input SeeRestaurantInput {
  restaurantId: Float!
}

input SearchRestaurantsInput {
  page: Float = 1
  restaurantName: String!
}

input SeeCategoryInput {
  page: Float = 1
  categoryName: String!
}

type Mutation {
  sendPasswordReset(input: SendPasswordResetInput!): SendPasswordResetOutput!
  createAccount(input: CreateAccountInput!): CreateAccountOutput!
  login(input: LoginInput!): LoginOutput!
  editProfile(input: EditProfileInput!): EditProfileOutput!
  verifyEmail(input: VerifyEmailInput!): VerifyEmailOutput!
  resetPassword(input: ResetPasswordInput!): ResetPasswordOutput!
  createRestaurant(input: CreateRestaurantInput!): CreateRestaurantOutput!
  editRestaurant(input: EditRestaurantInput!): EditRestaurantOutput!
  deleteRestaurant(input: DeleteRestaurantInput!): DeleteRestaurantOutput!
  createDish(input: CreateDishInput!): CreateDishOutput!
  editDish(input: EditDishInput!): EditDishOutput!
  deleteDish(input: DeleteDishInput!): DeleteDishOutput!
}

input SendPasswordResetInput {
  email: String!
}

input CreateAccountInput {
  email: String!
  password: String!
  role: Role!
}

input LoginInput {
  email: String!
  password: String!
}

input EditProfileInput {
  email: String
  username: String
  password: String
}

input VerifyEmailInput {
  code: String!
}

input ResetPasswordInput {
  username: String!
  password: String!
  confirmPassword: String!
}

input CreateRestaurantInput {
  name: String!
  address: String!
  imageUrl: String!
  categoryName: String!
}

input EditRestaurantInput {
  name: String
  address: String
  imageUrl: String
  categoryName: String
  restaurantId: Float!
}

input DeleteRestaurantInput {
  restaurantId: Float!
}

input CreateDishInput {
  name: String!
  price: Float!
  imageUrl: String!
  description: String
  restaurantId: Float!
  dishOptions: [DishOptionInputType!]
}

input DishOptionInputType {
  name: String!
  price: Float!
  dish: DishInputType
  dishId: Float
}

input DishInputType {
  name: String!
  price: Float!
  imageUrl: String!
  description: String
  restaurant: RestaurantInputType!
  restaurantId: Float!
  dishOptions: [DishOptionInputType!]
}

input RestaurantInputType {
  name: String!
  address: String!
  imageUrl: String!
  category: CategoryInputType
  owner: UserInputType!
  ownerId: Float!
  dishes: [DishInputType!]!
}

input CategoryInputType {
  name: String!
  imageUrl: String = "https://i.ibb.co/Df48zR7/dish.png"
  restaurants: [RestaurantInputType!]!
}

input UserInputType {
  email: String!
  username: String!
  password: String!
  emailVerified: Boolean = false
  role: Role!
  restaurants: [RestaurantInputType!]!
}

input EditDishInput {
  name: String
  price: Float
  imageUrl: String
  description: String
  dishId: Float!
}

input DeleteDishInput {
  dishId: Float!
}
